// Code generated by MockGen. DO NOT EDIT.
// Source: extiface.go

// Package mock_draw_indirect_count is a generated GoMock package.
package mock_draw_indirect_count

import (
	reflect "reflect"

	core1_0 "github.com/CannibalVox/VKng/core/core1_0"
	gomock "github.com/golang/mock/gomock"
)

// MockExtension is a mock of Extension interface.
type MockExtension struct {
	ctrl     *gomock.Controller
	recorder *MockExtensionMockRecorder
}

// MockExtensionMockRecorder is the mock recorder for MockExtension.
type MockExtensionMockRecorder struct {
	mock *MockExtension
}

// NewMockExtension creates a new mock instance.
func NewMockExtension(ctrl *gomock.Controller) *MockExtension {
	mock := &MockExtension{ctrl: ctrl}
	mock.recorder = &MockExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExtension) EXPECT() *MockExtensionMockRecorder {
	return m.recorder
}

// CmdDrawIndexedIndirectCount mocks base method.
func (m *MockExtension) CmdDrawIndexedIndirectCount(commandBuffer core1_0.CommandBuffer, buffer core1_0.Buffer, offset uint64, countBuffer core1_0.Buffer, countBufferOffset uint64, maxDrawCount, stride int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CmdDrawIndexedIndirectCount", commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride)
}

// CmdDrawIndexedIndirectCount indicates an expected call of CmdDrawIndexedIndirectCount.
func (mr *MockExtensionMockRecorder) CmdDrawIndexedIndirectCount(commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CmdDrawIndexedIndirectCount", reflect.TypeOf((*MockExtension)(nil).CmdDrawIndexedIndirectCount), commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride)
}

// CmdDrawIndirectCount mocks base method.
func (m *MockExtension) CmdDrawIndirectCount(commandBuffer core1_0.CommandBuffer, buffer core1_0.Buffer, offset uint64, countBuffer core1_0.Buffer, countBufferOffset uint64, maxDrawCount, stride int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CmdDrawIndirectCount", commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride)
}

// CmdDrawIndirectCount indicates an expected call of CmdDrawIndirectCount.
func (mr *MockExtensionMockRecorder) CmdDrawIndirectCount(commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CmdDrawIndirectCount", reflect.TypeOf((*MockExtension)(nil).CmdDrawIndirectCount), commandBuffer, buffer, offset, countBuffer, countBufferOffset, maxDrawCount, stride)
}
