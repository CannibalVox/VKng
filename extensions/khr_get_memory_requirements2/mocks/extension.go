// Code generated by MockGen. DO NOT EDIT.
// Source: extiface.go

// Package mock_get_memory_requirements2 is a generated GoMock package.
package mock_get_memory_requirements2

import (
	reflect "reflect"

	core1_0 "github.com/CannibalVox/VKng/core/core1_0"
	khr_get_memory_requirements2 "github.com/CannibalVox/VKng/extensions/khr_get_memory_requirements2"
	gomock "github.com/golang/mock/gomock"
)

// MockExtension is a mock of Extension interface.
type MockExtension struct {
	ctrl     *gomock.Controller
	recorder *MockExtensionMockRecorder
}

// MockExtensionMockRecorder is the mock recorder for MockExtension.
type MockExtensionMockRecorder struct {
	mock *MockExtension
}

// NewMockExtension creates a new mock instance.
func NewMockExtension(ctrl *gomock.Controller) *MockExtension {
	mock := &MockExtension{ctrl: ctrl}
	mock.recorder = &MockExtensionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExtension) EXPECT() *MockExtensionMockRecorder {
	return m.recorder
}

// BufferMemoryRequirements dummies base method.
func (m *MockExtension) BufferMemoryRequirements(device core1_0.Device, o khr_get_memory_requirements2.BufferMemoryRequirementsOptions, out *khr_get_memory_requirements2.MemoryRequirementsOutData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BufferMemoryRequirements", device, o, out)
	ret0, _ := ret[0].(error)
	return ret0
}

// BufferMemoryRequirements indicates an expected call of BufferMemoryRequirements.
func (mr *MockExtensionMockRecorder) BufferMemoryRequirements(device, o, out interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BufferMemoryRequirements", reflect.TypeOf((*MockExtension)(nil).BufferMemoryRequirements), device, o, out)
}

// ImageMemoryRequirements dummies base method.
func (m *MockExtension) ImageMemoryRequirements(device core1_0.Device, o khr_get_memory_requirements2.ImageMemoryRequirementsOptions, out *khr_get_memory_requirements2.MemoryRequirementsOutData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImageMemoryRequirements", device, o, out)
	ret0, _ := ret[0].(error)
	return ret0
}

// ImageMemoryRequirements indicates an expected call of ImageMemoryRequirements.
func (mr *MockExtensionMockRecorder) ImageMemoryRequirements(device, o, out interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImageMemoryRequirements", reflect.TypeOf((*MockExtension)(nil).ImageMemoryRequirements), device, o, out)
}

// SparseImageMemoryRequirements dummies base method.
func (m *MockExtension) SparseImageMemoryRequirements(device core1_0.Device, o khr_get_memory_requirements2.ImageSparseMemoryRequirementsOptions, outDataFactory func() *khr_get_memory_requirements2.SparseImageMemoryRequirementsOutData) ([]*khr_get_memory_requirements2.SparseImageMemoryRequirementsOutData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SparseImageMemoryRequirements", device, o, outDataFactory)
	ret0, _ := ret[0].([]*khr_get_memory_requirements2.SparseImageMemoryRequirementsOutData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SparseImageMemoryRequirements indicates an expected call of SparseImageMemoryRequirements.
func (mr *MockExtensionMockRecorder) SparseImageMemoryRequirements(device, o, outDataFactory interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SparseImageMemoryRequirements", reflect.TypeOf((*MockExtension)(nil).SparseImageMemoryRequirements), device, o, outDataFactory)
}
