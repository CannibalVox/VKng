// Code generated by MockGen. DO NOT EDIT.
// Source: extension.go

// Package mock_surface_sdl2 is a generated GoMock package.
package mock_surface_sdl2

import (
	reflect "reflect"

	core "github.com/CannibalVox/VKng/core"
	common "github.com/CannibalVox/VKng/core/common"
	khr_surface "github.com/CannibalVox/VKng/extensions/khr_surface"
	gomock "github.com/golang/mock/gomock"
	sdl "github.com/veandco/go-sdl2/sdl"
)

// MockLoader is a mock of Loader interface.
type MockLoader struct {
	ctrl     *gomock.Controller
	recorder *MockLoaderMockRecorder
}

// MockLoaderMockRecorder is the mock recorder for MockLoader.
type MockLoaderMockRecorder struct {
	mock *MockLoader
}

// NewMockLoader creates a new mock instance.
func NewMockLoader(ctrl *gomock.Controller) *MockLoader {
	mock := &MockLoader{ctrl: ctrl}
	mock.recorder = &MockLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoader) EXPECT() *MockLoaderMockRecorder {
	return m.recorder
}

// CreateSurface mocks base method.
func (m *MockLoader) CreateSurface(instance core.Instance, window *sdl.Window) (khr_surface.Surface, common.VkResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSurface", instance, window)
	ret0, _ := ret[0].(khr_surface.Surface)
	ret1, _ := ret[1].(common.VkResult)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateSurface indicates an expected call of CreateSurface.
func (mr *MockLoaderMockRecorder) CreateSurface(instance, window interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSurface", reflect.TypeOf((*MockLoader)(nil).CreateSurface), instance, window)
}
