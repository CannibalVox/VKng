
void loaderFuncPtrs_populate(PFN_vkGetInstanceProcAddr instanceProcAddr, LoaderFuncPtrs *funcPtrs) {
    funcPtrs->vkGetInstanceProcAddr = instanceProcAddr;
    funcPtrs->vkEnumerateInstanceExtensionProperties = (PFN_vkEnumerateInstanceExtensionProperties)instanceProcAddr(NULL, "vkEnumerateInstanceExtensionProperties");
    funcPtrs->vkEnumerateInstanceLayerProperties = (PFN_vkEnumerateInstanceLayerProperties)instanceProcAddr(NULL, "vkEnumerateInstanceLayerProperties");
    funcPtrs->vkCreateInstance = (PFN_vkCreateInstance)instanceProcAddr(NULL, "vkCreateInstance");

    funcPtrs->vkCreateDevice = NULL;
    funcPtrs->vkDestroyInstance = NULL;
    funcPtrs->vkEnumerateDeviceExtensionProperties = NULL;
    funcPtrs->vkEnumerateDeviceLayerProperties = NULL;
    funcPtrs->vkEnumeratePhysicalDevices = NULL;
    funcPtrs->vkGetPhysicalDeviceFeatures = NULL;
    funcPtrs->vkGetPhysicalDeviceFormatProperties = NULL;
    funcPtrs->vkGetPhysicalDeviceImageFormatProperties = NULL;
    funcPtrs->vkGetPhysicalDeviceMemoryProperties = NULL;
    funcPtrs->vkGetPhysicalDeviceProperties = NULL;
    funcPtrs->vkGetPhysicalDeviceQueueFamilyProperties = NULL;
    funcPtrs->vkGetPhysicalDeviceSparseImageFormatProperties = NULL;

    funcPtrs->vkGetDeviceProcAddr = NULL;
    funcPtrs->vkAllocateCommandBuffers = NULL;
    funcPtrs->vkAllocateDescriptorSets = NULL;
    funcPtrs->vkAllocateMemory = NULL;
    funcPtrs->vkBeginCommandBuffer = NULL;
    funcPtrs->vkBindBufferMemory = NULL;
    funcPtrs->vkBindImageMemory = NULL;
    funcPtrs->vkCmdBeginQuery = NULL;
    funcPtrs->vkCmdBeginRenderPass = NULL;
    funcPtrs->vkCmdBindDescriptorSets = NULL;
    funcPtrs->vkCmdBindIndexBuffer = NULL;
    funcPtrs->vkCmdBindPipeline = NULL;
    funcPtrs->vkCmdBindVertexBuffers = NULL;
    funcPtrs->vkCmdBlitImage = NULL;
    funcPtrs->vkCmdClearAttachments = NULL;
    funcPtrs->vkCmdClearColorImage = NULL;
    funcPtrs->vkCmdClearDepthStencilImage = NULL;
    funcPtrs->vkCmdCopyBuffer = NULL;
    funcPtrs->vkCmdCopyBufferToImage = NULL;
    funcPtrs->vkCmdCopyImage = NULL;
    funcPtrs->vkCmdCopyImageToBuffer = NULL;
    funcPtrs->vkCmdCopyQueryPoolResults = NULL;
    funcPtrs->vkCmdDispatch = NULL;
    funcPtrs->vkCmdDispatchIndirect = NULL;
    funcPtrs->vkCmdDraw = NULL;
    funcPtrs->vkCmdDrawIndexed = NULL;
    funcPtrs->vkCmdDrawIndexedIndirect = NULL;
    funcPtrs->vkCmdDrawIndirect = NULL;
    funcPtrs->vkCmdEndQuery = NULL;
    funcPtrs->vkCmdEndRenderPass = NULL;
    funcPtrs->vkCmdExecuteCommands = NULL;
    funcPtrs->vkCmdFillBuffer = NULL;
    funcPtrs->vkCmdNextSubpass = NULL;
    funcPtrs->vkCmdPipelineBarrier = NULL;
    funcPtrs->vkCmdPushConstants = NULL;
    funcPtrs->vkCmdResetEvent = NULL;
    funcPtrs->vkCmdResetQueryPool = NULL;
    funcPtrs->vkCmdResolveImage = NULL;
    funcPtrs->vkCmdSetBlendConstants = NULL;
    funcPtrs->vkCmdSetDepthBias = NULL;
    funcPtrs->vkCmdSetDepthBounds = NULL;
    funcPtrs->vkCmdSetEvent = NULL;
    funcPtrs->vkCmdSetLineWidth = NULL;
    funcPtrs->vkCmdSetScissor = NULL;
    funcPtrs->vkCmdSetStencilCompareMask = NULL;
    funcPtrs->vkCmdSetStencilReference = NULL;
    funcPtrs->vkCmdSetStencilWriteMask = NULL;
    funcPtrs->vkCmdSetViewport = NULL;
    funcPtrs->vkCmdUpdateBuffer = NULL;
    funcPtrs->vkCmdWaitEvents = NULL;
    funcPtrs->vkCmdWriteTimestamp = NULL;
    funcPtrs->vkCreateBuffer = NULL;
    funcPtrs->vkCreateBufferView = NULL;
    funcPtrs->vkCreateCommandPool = NULL;
    funcPtrs->vkCreateComputePipelines = NULL;
    funcPtrs->vkCreateDescriptorPool = NULL;
    funcPtrs->vkCreateDescriptorSetLayout = NULL;
    funcPtrs->vkCreateEvent = NULL;
    funcPtrs->vkCreateFence = NULL;
    funcPtrs->vkCreateFramebuffer = NULL;
    funcPtrs->vkCreateGraphicsPipelines = NULL;
    funcPtrs->vkCreateImage = NULL;
    funcPtrs->vkCreateImageView = NULL;
    funcPtrs->vkCreatePipelineCache = NULL;
    funcPtrs->vkCreatePipelineLayout = NULL;
    funcPtrs->vkCreateQueryPool = NULL;
    funcPtrs->vkCreateRenderPass = NULL;
    funcPtrs->vkCreateSampler = NULL;
    funcPtrs->vkCreateSemaphore = NULL;
    funcPtrs->vkCreateShaderModule = NULL;
    funcPtrs->vkDestroyBuffer = NULL;
    funcPtrs->vkDestroyBufferView = NULL;
    funcPtrs->vkDestroyCommandPool = NULL;
    funcPtrs->vkDestroyDescriptorPool = NULL;
    funcPtrs->vkDestroyDescriptorSetLayout = NULL;
    funcPtrs->vkDestroyDevice = NULL;
    funcPtrs->vkDestroyEvent = NULL;
    funcPtrs->vkDestroyFence = NULL;
    funcPtrs->vkDestroyFramebuffer = NULL;
    funcPtrs->vkDestroyImage = NULL;
    funcPtrs->vkDestroyImageView = NULL;
    funcPtrs->vkDestroyPipeline = NULL;
    funcPtrs->vkDestroyPipelineCache = NULL;
    funcPtrs->vkDestroyPipelineLayout = NULL;
    funcPtrs->vkDestroyQueryPool = NULL;
    funcPtrs->vkDestroyRenderPass = NULL;
    funcPtrs->vkDestroySampler = NULL;
    funcPtrs->vkDestroySemaphore = NULL;
    funcPtrs->vkDestroyShaderModule = NULL;
    funcPtrs->vkDeviceWaitIdle = NULL;
    funcPtrs->vkEndCommandBuffer = NULL;
    funcPtrs->vkFlushMappedMemoryRanges = NULL;
    funcPtrs->vkFreeCommandBuffers = NULL;
    funcPtrs->vkFreeDescriptorSets = NULL;
    funcPtrs->vkFreeMemory = NULL;
    funcPtrs->vkGetBufferMemoryRequirements = NULL;
    funcPtrs->vkGetDeviceMemoryCommitment = NULL;
    funcPtrs->vkGetDeviceQueue = NULL;
    funcPtrs->vkGetEventStatus = NULL;
    funcPtrs->vkGetFenceStatus = NULL;
    funcPtrs->vkGetImageMemoryRequirements = NULL;
    funcPtrs->vkGetImageSparseMemoryRequirements = NULL;
    funcPtrs->vkGetImageSubresourceLayout = NULL;
    funcPtrs->vkGetPipelineCacheData = NULL;
    funcPtrs->vkGetQueryPoolResults = NULL;
    funcPtrs->vkGetRenderAreaGranularity = NULL;
    funcPtrs->vkInvalidateMappedMemoryRanges = NULL;
    funcPtrs->vkMapMemory = NULL;
    funcPtrs->vkMergePipelineCaches = NULL;
    funcPtrs->vkQueueBindSparse = NULL;
    funcPtrs->vkQueueSubmit = NULL;
    funcPtrs->vkQueueWaitIdle = NULL;
    funcPtrs->vkResetCommandBuffer = NULL;
    funcPtrs->vkResetCommandPool = NULL;
    funcPtrs->vkResetDescriptorPool = NULL;
    funcPtrs->vkResetEvent = NULL;
    funcPtrs->vkResetFences = NULL;
    funcPtrs->vkSetEvent = NULL;
    funcPtrs->vkUnmapMemory = NULL;
    funcPtrs->vkUpdateDescriptorSets = NULL;
    funcPtrs->vkWaitForFences = NULL;
}

void instanceFuncPtrs_populate(VkInstance instance, LoaderFuncPtrs *src, LoaderFuncPtrs *dest) {
    dest->vkGetInstanceProcAddr = src->vkGetInstanceProcAddr;
    dest->vkEnumerateInstanceExtensionProperties = src->vkEnumerateInstanceExtensionProperties;
    dest->vkEnumerateInstanceLayerProperties = src->vkEnumerateInstanceLayerProperties;
    dest->vkCreateInstance = src->vkCreateInstance;

    PFN_vkGetInstanceProcAddr instanceProcAddr = src->vkGetInstanceProcAddr;
    dest->vkCreateDevice = (PFN_vkCreateDevice)instanceProcAddr(instance, "vkCreateDevice");
    dest->vkDestroyInstance = (PFN_vkDestroyInstance)instanceProcAddr(instance, "vkDestroyInstance");
    dest->vkEnumeratePhysicalDevices = (PFN_vkEnumeratePhysicalDevices)instanceProcAddr(instance, "vkEnumeratePhysicalDevices");
    dest->vkEnumerateDeviceExtensionProperties = (PFN_vkEnumerateDeviceExtensionProperties)instanceProcAddr(instance, "vkEnumerateDeviceExtensionProperties");
    dest->vkEnumerateDeviceLayerProperties = (PFN_vkEnumerateDeviceLayerProperties)instanceProcAddr(instance, "vkEnumerateDeviceLayerProperties");
    dest->vkGetPhysicalDeviceFeatures = (PFN_vkGetPhysicalDeviceFeatures)instanceProcAddr(instance, "vkGetPhysicalDeviceFeatures");
    dest->vkGetPhysicalDeviceFormatProperties = (PFN_vkGetPhysicalDeviceFormatProperties)instanceProcAddr(instance, "vkGetPhysicalDeviceFormatProperties");
    dest->vkGetPhysicalDeviceImageFormatProperties = (PFN_vkGetPhysicalDeviceImageFormatProperties)instanceProcAddr(instance, "vkGetPhysicalDeviceImageFormatProperties");
    dest->vkGetPhysicalDeviceMemoryProperties = (PFN_vkGetPhysicalDeviceMemoryProperties)instanceProcAddr(instance, "vkGetPhysicalDeviceMemoryProperties");
    dest->vkGetPhysicalDeviceProperties = (PFN_vkGetPhysicalDeviceProperties)instanceProcAddr(instance, "vkGetPhysicalDeviceProperties");
    dest->vkGetPhysicalDeviceQueueFamilyProperties = (PFN_vkGetPhysicalDeviceQueueFamilyProperties)instanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyProperties");
    dest->vkGetPhysicalDeviceSparseImageFormatProperties = (PFN_vkGetPhysicalDeviceSparseImageFormatProperties)instanceProcAddr(instance, "vkGetPhysicalDeviceSparseImageFormatProperties");

    dest->vkGetDeviceProcAddr = (PFN_vkGetDeviceProcAddr)instanceProcAddr(instance, "vkGetDeviceProcAddr");

    dest->vkAllocateCommandBuffers = NULL;
    dest->vkAllocateDescriptorSets = NULL;
    dest->vkAllocateMemory = NULL;
    dest->vkBeginCommandBuffer = NULL;
    dest->vkBindBufferMemory = NULL;
    dest->vkBindImageMemory = NULL;
    dest->vkCmdBeginQuery = NULL;
    dest->vkCmdBeginRenderPass = NULL;
    dest->vkCmdBindDescriptorSets = NULL;
    dest->vkCmdBindIndexBuffer = NULL;
    dest->vkCmdBindPipeline = NULL;
    dest->vkCmdBindVertexBuffers = NULL;
    dest->vkCmdBlitImage = NULL;
    dest->vkCmdClearAttachments = NULL;
    dest->vkCmdClearColorImage = NULL;
    dest->vkCmdClearDepthStencilImage = NULL;
    dest->vkCmdCopyBuffer = NULL;
    dest->vkCmdCopyBufferToImage = NULL;
    dest->vkCmdCopyImage = NULL;
    dest->vkCmdCopyImageToBuffer = NULL;
    dest->vkCmdCopyQueryPoolResults = NULL;
    dest->vkCmdDispatch = NULL;
    dest->vkCmdDispatchIndirect = NULL;
    dest->vkCmdDraw = NULL;
    dest->vkCmdDrawIndexed = NULL;
    dest->vkCmdDrawIndexedIndirect = NULL;
    dest->vkCmdDrawIndirect = NULL;
    dest->vkCmdEndQuery = NULL;
    dest->vkCmdEndRenderPass = NULL;
    dest->vkCmdExecuteCommands = NULL;
    dest->vkCmdFillBuffer = NULL;
    dest->vkCmdNextSubpass = NULL;
    dest->vkCmdPipelineBarrier = NULL;
    dest->vkCmdPushConstants = NULL;
    dest->vkCmdResetEvent = NULL;
    dest->vkCmdResetQueryPool = NULL;
    dest->vkCmdResolveImage = NULL;
    dest->vkCmdSetBlendConstants = NULL;
    dest->vkCmdSetDepthBias = NULL;
    dest->vkCmdSetDepthBounds = NULL;
    dest->vkCmdSetEvent = NULL;
    dest->vkCmdSetLineWidth = NULL;
    dest->vkCmdSetScissor = NULL;
    dest->vkCmdSetStencilCompareMask = NULL;
    dest->vkCmdSetStencilReference = NULL;
    dest->vkCmdSetStencilWriteMask = NULL;
    dest->vkCmdSetViewport = NULL;
    dest->vkCmdUpdateBuffer = NULL;
    dest->vkCmdWaitEvents = NULL;
    dest->vkCmdWriteTimestamp = NULL;
    dest->vkCreateBuffer = NULL;
    dest->vkCreateBufferView = NULL;
    dest->vkCreateCommandPool = NULL;
    dest->vkCreateComputePipelines = NULL;
    dest->vkCreateDescriptorPool = NULL;
    dest->vkCreateDescriptorSetLayout = NULL;
    dest->vkCreateEvent = NULL;
    dest->vkCreateFence = NULL;
    dest->vkCreateFramebuffer = NULL;
    dest->vkCreateGraphicsPipelines = NULL;
    dest->vkCreateImage = NULL;
    dest->vkCreateImageView = NULL;
    dest->vkCreatePipelineCache = NULL;
    dest->vkCreatePipelineLayout = NULL;
    dest->vkCreateQueryPool = NULL;
    dest->vkCreateRenderPass = NULL;
    dest->vkCreateSampler = NULL;
    dest->vkCreateSemaphore = NULL;
    dest->vkCreateShaderModule = NULL;
    dest->vkDestroyBuffer = NULL;
    dest->vkDestroyBufferView = NULL;
    dest->vkDestroyCommandPool = NULL;
    dest->vkDestroyDescriptorPool = NULL;
    dest->vkDestroyDescriptorSetLayout = NULL;
    dest->vkDestroyDevice = NULL;
    dest->vkDestroyEvent = NULL;
    dest->vkDestroyFence = NULL;
    dest->vkDestroyFramebuffer = NULL;
    dest->vkDestroyImage = NULL;
    dest->vkDestroyImageView = NULL;
    dest->vkDestroyPipeline = NULL;
    dest->vkDestroyPipelineCache = NULL;
    dest->vkDestroyPipelineLayout = NULL;
    dest->vkDestroyQueryPool = NULL;
    dest->vkDestroyRenderPass = NULL;
    dest->vkDestroySampler = NULL;
    dest->vkDestroySemaphore = NULL;
    dest->vkDestroyShaderModule = NULL;
    dest->vkDeviceWaitIdle = NULL;
    dest->vkEndCommandBuffer = NULL;
    dest->vkFlushMappedMemoryRanges = NULL;
    dest->vkFreeCommandBuffers = NULL;
    dest->vkFreeDescriptorSets = NULL;
    dest->vkFreeMemory = NULL;
    dest->vkGetBufferMemoryRequirements = NULL;
    dest->vkGetDeviceMemoryCommitment = NULL;
    dest->vkGetDeviceQueue = NULL;
    dest->vkGetEventStatus = NULL;
    dest->vkGetFenceStatus = NULL;
    dest->vkGetImageMemoryRequirements = NULL;
    dest->vkGetImageSparseMemoryRequirements = NULL;
    dest->vkGetImageSubresourceLayout = NULL;
    dest->vkGetPipelineCacheData = NULL;
    dest->vkGetQueryPoolResults = NULL;
    dest->vkGetRenderAreaGranularity = NULL;
    dest->vkInvalidateMappedMemoryRanges = NULL;
    dest->vkMapMemory = NULL;
    dest->vkMergePipelineCaches = NULL;
    dest->vkQueueBindSparse = NULL;
    dest->vkQueueSubmit = NULL;
    dest->vkQueueWaitIdle = NULL;
    dest->vkResetCommandBuffer = NULL;
    dest->vkResetCommandPool = NULL;
    dest->vkResetDescriptorPool = NULL;
    dest->vkResetEvent = NULL;
    dest->vkResetFences = NULL;
    dest->vkSetEvent = NULL;
    dest->vkUnmapMemory = NULL;
    dest->vkUpdateDescriptorSets = NULL;
    dest->vkWaitForFences = NULL;
}

void deviceFuncPtrs_populate(VkDevice device, LoaderFuncPtrs *src, LoaderFuncPtrs *dest) {
    dest->vkGetInstanceProcAddr = src->vkGetInstanceProcAddr;
    dest->vkEnumerateInstanceExtensionProperties = src->vkEnumerateInstanceExtensionProperties;
    dest->vkEnumerateInstanceLayerProperties = src->vkEnumerateInstanceLayerProperties;
    dest->vkCreateInstance = src->vkCreateInstance;
    dest->vkCreateDevice = src->vkCreateDevice;
    dest->vkDestroyInstance = src->vkDestroyInstance;
    dest->vkEnumeratePhysicalDevices = src->vkEnumeratePhysicalDevices;
    dest->vkEnumerateDeviceExtensionProperties = src->vkEnumerateDeviceExtensionProperties;
    dest->vkEnumerateDeviceLayerProperties = src->vkEnumerateDeviceLayerProperties;
    dest->vkGetPhysicalDeviceFeatures = src->vkGetPhysicalDeviceFeatures;
    dest->vkGetPhysicalDeviceFormatProperties = src->vkGetPhysicalDeviceFormatProperties;
    dest->vkGetPhysicalDeviceImageFormatProperties = src->vkGetPhysicalDeviceImageFormatProperties;
    dest->vkGetPhysicalDeviceMemoryProperties = src->vkGetPhysicalDeviceMemoryProperties;
    dest->vkGetPhysicalDeviceProperties = src->vkGetPhysicalDeviceProperties;
    dest->vkGetPhysicalDeviceQueueFamilyProperties = src->vkGetPhysicalDeviceQueueFamilyProperties;
    dest->vkGetPhysicalDeviceSparseImageFormatProperties = src->vkGetPhysicalDeviceSparseImageFormatProperties;
    dest->vkGetDeviceProcAddr = src->vkGetDeviceProcAddr;

    PFN_vkGetDeviceProcAddr deviceProcAddr = src->vkGetDeviceProcAddr;

    dest->vkAllocateCommandBuffers = (PFN_vkAllocateCommandBuffers)deviceProcAddr(device, "vkAllocateCommandBuffers");
    dest->vkAllocateDescriptorSets = (PFN_vkAllocateDescriptorSets)deviceProcAddr(device, "vkAllocateDescriptorSets");
    dest->vkAllocateMemory = (PFN_vkAllocateMemory)deviceProcAddr(device, "vkAllocateMemory");
    dest->vkBeginCommandBuffer = (PFN_vkBeginCommandBuffer)deviceProcAddr(device, "vkBeginCommandBuffer");
    dest->vkBindBufferMemory = (PFN_vkBindBufferMemory)deviceProcAddr(device, "vkBindBufferMemory");
    dest->vkBindImageMemory = (PFN_vkBindImageMemory)deviceProcAddr(device, "vkBindImageMemory");
    dest->vkCmdBeginQuery = (PFN_vkCmdBeginQuery)deviceProcAddr(device, "vkCmdBeginQuery");
    dest->vkCmdBeginRenderPass = (PFN_vkCmdBeginRenderPass)deviceProcAddr(device, "vkCmdBeginRenderPass");
    dest->vkCmdBindDescriptorSets = (PFN_vkCmdBindDescriptorSets)deviceProcAddr(device, "vkCmdBindDescriptorSets");
    dest->vkCmdBindIndexBuffer = (PFN_vkCmdBindIndexBuffer)deviceProcAddr(device, "vkCmdBindIndexBuffer");
    dest->vkCmdBindPipeline = (PFN_vkCmdBindPipeline)deviceProcAddr(device, "vkCmdBindPipeline");
    dest->vkCmdBindVertexBuffers = (PFN_vkCmdBindVertexBuffers)deviceProcAddr(device, "vkCmdBindVertexBuffers");
    dest->vkCmdBlitImage = (PFN_vkCmdBlitImage)deviceProcAddr(device, "vkCmdBlitImage");
    dest->vkCmdClearAttachments = (PFN_vkCmdClearAttachments)deviceProcAddr(device, "vkCmdClearAttachments");
    dest->vkCmdClearColorImage = (PFN_vkCmdClearColorImage)deviceProcAddr(device, "vkCmdClearColorImage");
    dest->vkCmdClearDepthStencilImage = (PFN_vkCmdClearDepthStencilImage)deviceProcAddr(device, "vkCmdClearDepthStencilImage");
    dest->vkCmdCopyBuffer = (PFN_vkCmdCopyBuffer)deviceProcAddr(device, "vkCmdCopyBuffer");
    dest->vkCmdCopyBufferToImage = (PFN_vkCmdCopyBufferToImage)deviceProcAddr(device, "vkCmdCopyBufferToImage");
    dest->vkCmdCopyImage = (PFN_vkCmdCopyImage)deviceProcAddr(device, "vkCmdCopyImage");
    dest->vkCmdCopyImageToBuffer = (PFN_vkCmdCopyImageToBuffer)deviceProcAddr(device, "vkCmdCopyImageToBuffer");
    dest->vkCmdCopyQueryPoolResults = (PFN_vkCmdCopyQueryPoolResults)deviceProcAddr(device, "vkCmdCopyQueryPoolResults");
    dest->vkCmdDispatch = (PFN_vkCmdDispatch)deviceProcAddr(device, "vkCmdDispatch");
    dest->vkCmdDispatchIndirect = (PFN_vkCmdDispatchIndirect)deviceProcAddr(device, "vkCmdDispatchIndirect");
    dest->vkCmdDraw = (PFN_vkCmdDraw)deviceProcAddr(device, "vkCmdDraw");
    dest->vkCmdDrawIndexed = (PFN_vkCmdDrawIndexed)deviceProcAddr(device, "vkCmdDrawIndexed");
    dest->vkCmdDrawIndexedIndirect = (PFN_vkCmdDrawIndexedIndirect)deviceProcAddr(device, "vkCmdDrawIndexedIndirect");
    dest->vkCmdDrawIndirect = (PFN_vkCmdDrawIndirect)deviceProcAddr(device, "vkCmdDrawIndirect");
    dest->vkCmdEndQuery = (PFN_vkCmdEndQuery)deviceProcAddr(device, "vkCmdEndQuery");
    dest->vkCmdEndRenderPass = (PFN_vkCmdEndRenderPass)deviceProcAddr(device, "vkCmdEndRenderPass");
    dest->vkCmdExecuteCommands = (PFN_vkCmdExecuteCommands)deviceProcAddr(device, "vkCmdExecuteCommands");
    dest->vkCmdFillBuffer = (PFN_vkCmdFillBuffer)deviceProcAddr(device, "vkCmdFillBuffer");
    dest->vkCmdNextSubpass = (PFN_vkCmdNextSubpass)deviceProcAddr(device, "vkCmdNextSubpass");
    dest->vkCmdPipelineBarrier = (PFN_vkCmdPipelineBarrier)deviceProcAddr(device, "vkCmdPipelineBarrier");
    dest->vkCmdPushConstants = (PFN_vkCmdPushConstants)deviceProcAddr(device, "vkCmdPushConstants");
    dest->vkCmdResetEvent = (PFN_vkCmdResetEvent)deviceProcAddr(device, "vkCmdResetEvent");
    dest->vkCmdResetQueryPool = (PFN_vkCmdResetQueryPool)deviceProcAddr(device, "vkCmdResetQueryPool");
    dest->vkCmdResolveImage = (PFN_vkCmdResolveImage)deviceProcAddr(device, "vkCmdResolveImage");
    dest->vkCmdSetBlendConstants = (PFN_vkCmdSetBlendConstants)deviceProcAddr(device, "vkCmdSetBlendConstants");
    dest->vkCmdSetDepthBias = (PFN_vkCmdSetDepthBias)deviceProcAddr(device, "vkCmdSetDepthBias");
    dest->vkCmdSetDepthBounds = (PFN_vkCmdSetDepthBounds)deviceProcAddr(device, "vkCmdSetDepthBounds");
    dest->vkCmdSetEvent = (PFN_vkCmdSetEvent)deviceProcAddr(device, "vkCmdSetEvent");
    dest->vkCmdSetLineWidth = (PFN_vkCmdSetLineWidth)deviceProcAddr(device, "vkCmdSetLineWidth");
    dest->vkCmdSetScissor = (PFN_vkCmdSetScissor)deviceProcAddr(device, "vkCmdSetScissor");
    dest->vkCmdSetStencilCompareMask = (PFN_vkCmdSetStencilCompareMask)deviceProcAddr(device, "vkCmdSetStencilCompareMask");
    dest->vkCmdSetStencilReference = (PFN_vkCmdSetStencilReference)deviceProcAddr(device, "vkCmdSetStencilReference");
    dest->vkCmdSetStencilWriteMask = (PFN_vkCmdSetStencilWriteMask)deviceProcAddr(device, "vkCmdSetStencilWriteMask");
    dest->vkCmdSetViewport = (PFN_vkCmdSetViewport)deviceProcAddr(device, "vkCmdSetViewport");
    dest->vkCmdUpdateBuffer = (PFN_vkCmdUpdateBuffer)deviceProcAddr(device, "vkCmdUpdateBuffer");
    dest->vkCmdWaitEvents = (PFN_vkCmdWaitEvents)deviceProcAddr(device, "vkCmdWaitEvents");
    dest->vkCmdWriteTimestamp = (PFN_vkCmdWriteTimestamp)deviceProcAddr(device, "vkCmdWriteTimestamp");
    dest->vkCreateBuffer = (PFN_vkCreateBuffer)deviceProcAddr(device, "vkCreateBuffer");
    dest->vkCreateBufferView = (PFN_vkCreateBufferView)deviceProcAddr(device, "vkCreateBufferView");
    dest->vkCreateCommandPool = (PFN_vkCreateCommandPool)deviceProcAddr(device, "vkCreateCommandPool");
    dest->vkCreateComputePipelines = (PFN_vkCreateComputePipelines)deviceProcAddr(device, "vkCreateComputePipelines");
    dest->vkCreateDescriptorPool = (PFN_vkCreateDescriptorPool)deviceProcAddr(device, "vkCreateDescriptorPool");
    dest->vkCreateDescriptorSetLayout = (PFN_vkCreateDescriptorSetLayout)deviceProcAddr(device, "vkCreateDescriptorSetLayout");
    dest->vkCreateEvent = (PFN_vkCreateEvent)deviceProcAddr(device, "vkCreateEvent");
    dest->vkCreateFence = (PFN_vkCreateFence)deviceProcAddr(device, "vkCreateFence");
    dest->vkCreateFramebuffer = (PFN_vkCreateFramebuffer)deviceProcAddr(device, "vkCreateFramebuffer");
    dest->vkCreateGraphicsPipelines = (PFN_vkCreateGraphicsPipelines)deviceProcAddr(device, "vkCreateGraphicsPipelines");
    dest->vkCreateImage = (PFN_vkCreateImage)deviceProcAddr(device, "vkCreateImage");
    dest->vkCreateImageView = (PFN_vkCreateImageView)deviceProcAddr(device, "vkCreateImageView");
    dest->vkCreatePipelineCache = (PFN_vkCreatePipelineCache)deviceProcAddr(device, "vkCreatePipelineCache");
    dest->vkCreatePipelineLayout = (PFN_vkCreatePipelineLayout)deviceProcAddr(device, "vkCreatePipelineLayout");
    dest->vkCreateQueryPool = (PFN_vkCreateQueryPool)deviceProcAddr(device, "vkCreateQueryPool");
    dest->vkCreateRenderPass = (PFN_vkCreateRenderPass)deviceProcAddr(device, "vkCreateRenderPass");
    dest->vkCreateSampler = (PFN_vkCreateSampler)deviceProcAddr(device, "vkCreateSampler");
    dest->vkCreateSemaphore = (PFN_vkCreateSemaphore)deviceProcAddr(device, "vkCreateSemaphore");
    dest->vkCreateShaderModule = (PFN_vkCreateShaderModule)deviceProcAddr(device, "vkCreateShaderModule");
    dest->vkDestroyBuffer = (PFN_vkDestroyBuffer)deviceProcAddr(device, "vkDestroyBuffer");
    dest->vkDestroyBufferView = (PFN_vkDestroyBufferView)deviceProcAddr(device, "vkDestroyBufferView");
    dest->vkDestroyCommandPool = (PFN_vkDestroyCommandPool)deviceProcAddr(device, "vkDestroyCommandPool");
    dest->vkDestroyDescriptorPool = (PFN_vkDestroyDescriptorPool)deviceProcAddr(device, "vkDestroyDescriptorPool");
    dest->vkDestroyDescriptorSetLayout = (PFN_vkDestroyDescriptorSetLayout)deviceProcAddr(device, "vkDestroyDescriptorSetLayout");
    dest->vkDestroyDevice = (PFN_vkDestroyDevice)deviceProcAddr(device, "vkDestroyDevice");
    dest->vkDestroyEvent = (PFN_vkDestroyEvent)deviceProcAddr(device, "vkDestroyEvent");
    dest->vkDestroyFence = (PFN_vkDestroyFence)deviceProcAddr(device, "vkDestroyFence");
    dest->vkDestroyFramebuffer = (PFN_vkDestroyFramebuffer)deviceProcAddr(device, "vkDestroyFramebuffer");
    dest->vkDestroyImage = (PFN_vkDestroyImage)deviceProcAddr(device, "vkDestroyImage");
    dest->vkDestroyImageView = (PFN_vkDestroyImageView)deviceProcAddr(device, "vkDestroyImageView");
    dest->vkDestroyPipeline = (PFN_vkDestroyPipeline)deviceProcAddr(device, "vkDestroyPipeline");
    dest->vkDestroyPipelineCache = (PFN_vkDestroyPipelineCache)deviceProcAddr(device, "vkDestroyPipelineCache");
    dest->vkDestroyPipelineLayout = (PFN_vkDestroyPipelineLayout)deviceProcAddr(device, "vkDestroyPipelineLayout");
    dest->vkDestroyQueryPool = (PFN_vkDestroyQueryPool)deviceProcAddr(device, "vkDestroyQueryPool");
    dest->vkDestroyRenderPass = (PFN_vkDestroyRenderPass)deviceProcAddr(device, "vkDestroyRenderPass");
    dest->vkDestroySampler = (PFN_vkDestroySampler)deviceProcAddr(device, "vkDestroySampler");
    dest->vkDestroySemaphore = (PFN_vkDestroySemaphore)deviceProcAddr(device, "vkDestroySemaphore");
    dest->vkDestroyShaderModule = (PFN_vkDestroyShaderModule)deviceProcAddr(device, "vkDestroyShaderModule");
    dest->vkDeviceWaitIdle = (PFN_vkDeviceWaitIdle)deviceProcAddr(device, "vkDeviceWaitIdle");
    dest->vkEndCommandBuffer = (PFN_vkEndCommandBuffer)deviceProcAddr(device, "vkEndCommandBuffer");
    dest->vkFlushMappedMemoryRanges = (PFN_vkFlushMappedMemoryRanges)deviceProcAddr(device, "vkFlushMappedMemoryRanges");
    dest->vkFreeCommandBuffers = (PFN_vkFreeCommandBuffers)deviceProcAddr(device, "vkFreeCommandBuffers");
    dest->vkFreeDescriptorSets = (PFN_vkFreeDescriptorSets)deviceProcAddr(device, "vkFreeDescriptorSets");
    dest->vkFreeMemory = (PFN_vkFreeMemory)deviceProcAddr(device, "vkFreeMemory");
    dest->vkGetBufferMemoryRequirements = (PFN_vkGetBufferMemoryRequirements)deviceProcAddr(device, "vkGetBufferMemoryRequirements");
    dest->vkGetDeviceMemoryCommitment = (PFN_vkGetDeviceMemoryCommitment)deviceProcAddr(device, "vkGetDeviceMemoryCommitment");
    dest->vkGetDeviceQueue = (PFN_vkGetDeviceQueue)deviceProcAddr(device, "vkGetDeviceQueue");
    dest->vkGetEventStatus = (PFN_vkGetEventStatus)deviceProcAddr(device, "vkGetEventStatus");
    dest->vkGetFenceStatus = (PFN_vkGetFenceStatus)deviceProcAddr(device, "vkGetFenceStatus");
    dest->vkGetImageMemoryRequirements = (PFN_vkGetImageMemoryRequirements)deviceProcAddr(device, "vkGetImageMemoryRequirements");
    dest->vkGetImageSparseMemoryRequirements = (PFN_vkGetImageSparseMemoryRequirements)deviceProcAddr(device, "vkGetImageSparseMemoryRequirements");
    dest->vkGetImageSubresourceLayout = (PFN_vkGetImageSubresourceLayout)deviceProcAddr(device, "vkGetImageSubresourceLayout");
    dest->vkGetPipelineCacheData = (PFN_vkGetPipelineCacheData)deviceProcAddr(device, "vkGetPipelineCacheData");
    dest->vkGetQueryPoolResults = (PFN_vkGetQueryPoolResults)deviceProcAddr(device, "vkGetQueryPoolResults");
    dest->vkGetRenderAreaGranularity = (PFN_vkGetRenderAreaGranularity)deviceProcAddr(device, "vkGetRenderAreaGranularity");
    dest->vkInvalidateMappedMemoryRanges = (PFN_vkInvalidateMappedMemoryRanges)deviceProcAddr(device, "vkInvalidateMappedMemoryRanges");
    dest->vkMapMemory = (PFN_vkMapMemory)deviceProcAddr(device, "vkMapMemory");
    dest->vkMergePipelineCaches = (PFN_vkMergePipelineCaches)deviceProcAddr(device, "vkMergePipelineCaches");
    dest->vkQueueBindSparse = (PFN_vkQueueBindSparse)deviceProcAddr(device, "vkQueueBindSparse");
    dest->vkQueueSubmit = (PFN_vkQueueSubmit)deviceProcAddr(device, "vkQueueSubmit");
    dest->vkQueueWaitIdle = (PFN_vkQueueWaitIdle)deviceProcAddr(device, "vkQueueWaitIdle");
    dest->vkResetCommandBuffer = (PFN_vkResetCommandBuffer)deviceProcAddr(device, "vkResetCommandBuffer");
    dest->vkResetCommandPool = (PFN_vkResetCommandPool)deviceProcAddr(device, "vkResetCommandPool");
    dest->vkResetDescriptorPool = (PFN_vkResetDescriptorPool)deviceProcAddr(device, "vkResetDescriptorPool");
    dest->vkResetEvent = (PFN_vkResetEvent)deviceProcAddr(device, "vkResetEvent");
    dest->vkResetFences = (PFN_vkResetFences)deviceProcAddr(device, "vkResetFences");
    dest->vkSetEvent = (PFN_vkSetEvent)deviceProcAddr(device, "vkSetEvent");
    dest->vkUnmapMemory = (PFN_vkUnmapMemory)deviceProcAddr(device, "vkUnmapMemory");
    dest->vkUpdateDescriptorSets = (PFN_vkUpdateDescriptorSets)deviceProcAddr(device, "vkUpdateDescriptorSets");
    dest->vkWaitForFences = (PFN_vkWaitForFences)deviceProcAddr(device, "vkWaitForFences");
}

